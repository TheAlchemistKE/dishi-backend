version: '3.8'

services:
  proxy:
    image: nginx:alpine
    container_name: proxy
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    restart: 'unless-stopped'
    networks:
      - backend
  server:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: server
    ports:
      - '8082:8082'
    environment:
      PORT: 8081
    # volumes:
    #   - ./:/app
    #   - /app/node_modules
    #   - /app/build
    restart: 'unless-stopped'
    networks:
      - backend
    depends_on:
     - database
     - cache
  database:
    image: mongo
    restart: always
    container_name: database
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - '27017:27017'
    volumes:
      - store:/data/db
    networks:
      - backend
  cache:
    image: redis:latest
    container_name: cache
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - cache:/data
    networks:
      - backend
networks:
  backend:
    driver: bridge
volumes:
  data:
    driver: local
  store:
    driver: local
  cache:
    driver: local